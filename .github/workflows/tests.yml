name: testing and deployment

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2 

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
          pip install httpx

      - name: Run tests
        run: |
          pytest -s tests/
  
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.5 

      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          echo -e "[default]\naws_access_key_id=${AWS_ACCESS_KEY_ID}\naws_secret_access_key=${AWS_SECRET_ACCESS_KEY}\nregion=${AWS_DEFAULT_REGION}" > ~/.aws/credentials


      - name: Terraform Init
        run: terraform init

      - name: Terraform apply
        run: terraform apply -auto-approve

      - name: Get EC2 Public IP
        id: ec2_ip
        run: echo "ec2_ip=$(terraform output -raw ec2_instance_ip)" >> $GITHUB_OUTPUT

      - name: wait for ec2
        run: sleep 300

      - name: Update Ansible Inventory
        run: echo "[app_servers]\n${{ steps.ec2_ip.outputs.ec2_ip }} ansible_ssh_private_key_file=./doodle_key.pem ansible_ssh_user=ubuntu" > inventory.ini

      - name: wait for one test run
        run: sleep 120
      
      - name: terraform destroy
        run: terraform destroy -auto-approve
